# Nginx configuration for petplantr.com production deployment

# Frontend (petplantr.com)
server {
    listen 80;
    listen [::]:80;
    server_name petplantr.com www.petplantr.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name petplantr.com www.petplantr.com;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/petplantr.com.crt;
    ssl_certificate_key /etc/ssl/private/petplantr.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # Proxy to Next.js frontend
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Static assets caching
    location /_next/static {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Model files caching
    location /models {
        proxy_pass http://localhost:3000;
        expires 1d;
        add_header Cache-Control "public";
    }
}

# API (api.petplantr.com)
server {
    listen 80;
    listen [::]:80;
    server_name api.petplantr.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.petplantr.com;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/api.petplantr.com.crt;
    ssl_certificate_key /etc/ssl/private/api.petplantr.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # CORS headers for API
    add_header Access-Control-Allow-Origin "https://petplantr.com";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req zone=api burst=20 nodelay;

    # Proxy to FastAPI backend (canary-aware via $api_upstream)
    # Requires nginx/canary_api.conf to be included in http { } (e.g., via conf.d/*.conf)
    location / {
        proxy_pass http://$api_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for long AI processing
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Health check endpoints (no rate limiting)
    # You may pin health to v1 by using http://api_v1 instead of $api_upstream
    location ~ ^/(healthz|readyz|api/v1/health)$ {
        proxy_pass http://$api_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Metrics endpoint (restrict access)
    location /metrics {
        allow 10.0.0.0/8;      # Internal networks
        allow 172.16.0.0/12;   # Internal networks
        allow 192.168.0.0/16;  # Internal networks
        deny all;
        # If desired, pin metrics to v1 to keep timeseries consistent
        proxy_pass http://$api_upstream;
        proxy_set_header Host $host;
    }
}

# CDN (optional - cdn.petplantr.com)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cdn.petplantr.com;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/cdn.petplantr.com.crt;
    ssl_certificate_key /etc/ssl/private/cdn.petplantr.com.key;

    # Static asset serving
    root /var/www/petplantr/static;
    
    # Long cache for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    # Model files
    location /models/ {
        expires 1d;
        add_header Cache-Control "public";
        add_header Access-Control-Allow-Origin "https://petplantr.com";
    }
}
